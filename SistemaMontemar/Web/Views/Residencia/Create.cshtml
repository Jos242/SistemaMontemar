@model Infrastructure.Models.Residencia

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Save", "Residencia", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Residence</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.IdUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdUsuario,
               (SelectList)ViewBag.idUsuario,
               htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdUsuario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CantPersonas, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CantPersonas, new { htmlAttributes = new { @class = "form-control", min = 1 } })
                @Html.ValidationMessageFor(model => model.CantPersonas, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CantCarros, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CantCarros, new { htmlAttributes = new { @class = "form-control", min = 0 } })
                @Html.ValidationMessageFor(model => model.CantCarros, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaAlquiler, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.FechaAlquiler, new { @id = "myDatePicker", @type = "text" })
                @Html.ValidationMessageFor(model => model.FechaAlquiler, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tipo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Tipo, new SelectList(
                    new List<SelectListItem>
                    {
                        new SelectListItem { Text = "Small", Value = "0" },
                        new SelectListItem { Text = "Medium", Value = "1" },
                        new SelectListItem { Text = "Large", Value = "2" }
                    }, "Value", "Text"), "Select a size", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Estado, new SelectList(
                    new List<SelectListItem>
                    {
                        new SelectListItem { Text = "In Construction", Value = "0" },
                        new SelectListItem { Text = "Inhabited", Value = "1" },
                    }, "Value", "Text"), "Select an status", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <a href="@Url.Action("Index", "Residencia", null)" class="btn btn-outline-dark"><i class="fa-solid fa-reply"></i> Go Back</a>
                <input type="submit" value="Create" class="btn btn-outline-info" />
            </div>
        </div>
    </div>
    <script src="~/Scripts/flatpickr.min.js"></script>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        flatpickr("#myDatePicker", {
            dateFormat: "Y-m-d",
        });
    </script>
}
